//?#version 450
#define MAX_POINT_COUNT_LSQ 5

//?#include "../defines.glsl"

readonly layout(std430, binding = 3) buffer pseudoInverse
{
	// float pseudoInverses[][MAX_COEFF_SIZE][MAX_POINT_COUNT_LSQ * MAX_POINT_COUNT_LSQ * MAX_POINT_COUNT_LSQ];
	float pseudoInverses[];
};

readonly layout(std430, binding = 4) buffer lsqPointsBuff
{
	vec4 lsqPoints[];
};

float SceneSDF(vec3 p);

float getPseudoInverseVal(int polyDeg, int degId, int sampleId)
{
	return pseudoInverses[polyDeg * MAX_COEFF_SIZE * MAX_POINT_COUNT_LSQ * MAX_POINT_COUNT_LSQ * MAX_POINT_COUNT_LSQ +
						  degId * MAX_POINT_COUNT_LSQ * MAX_POINT_COUNT_LSQ * MAX_POINT_COUNT_LSQ +
						  sampleId];
}

float evalSDFIntegral(ivec3 degs, int degId, int polyDeg, int pointCount_, vec3 intervalStarting, vec3 intervalEnding)
{
	vec3 intervalSize = intervalEnding - intervalStarting;
	float value = 0.0f;
	//return 0.0f;

	for (int sampleId = 0; sampleId < lsqPoints.length(); sampleId++)
	{
		float sampleVal = SceneSDF((lsqPoints[sampleId].xyz * 0.5f + 0.5f) * intervalSize + intervalStarting);
		value += getPseudoInverseVal(polyDeg, degId, sampleId) * sampleVal;
	}
	
	return value;
}